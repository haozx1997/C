#include<stdio.h>
/*
哥德巴赫1742年给欧拉的信中哥德巴赫提出了以下猜想：任一大于2的偶数都可写成两个质数之和。但是哥德巴赫自己无法证明它，于是就写信请教赫赫有名的大数学家欧拉帮忙证明，但是一直到死，欧拉也无法证明。[1]  因现今数学界已经不使用“1也是素数”这个约定，原初猜想的现代陈述为：任一大于5的整数都可写成三个质数之和。欧拉在回信中也提出另一等价版本，即任一大于2的偶数都可写成两个质数之和。今日常见的猜想陈述为欧拉的版本。把命题"任一充分大的偶数都可以表示成为一个素因子个数不超过a个的数与另一个素因子不超过b个的数之和"记作"a+b"。1966年陈景润证明了"1+2"成立，即"任一充分大的偶数都可以表示成二个素数的和，或是一个素数和一个半素数的和"。
今日常见的猜想陈述为欧拉的版本，即任一大于2的偶数都可写成两个素数之和，亦称为“强哥德巴赫猜想”或“关于偶数的哥德巴赫猜想”。
从关于偶数的哥德巴赫猜想，可推出：任一大于7的奇数都可写成三个质数之和的猜想。后者称为“弱哥德巴赫猜想”或“关于奇数的哥德巴赫猜想”。若关于偶数的哥德巴赫猜想是对的，则关于奇数的哥德巴赫猜想也会是对的。弱哥德巴赫猜想尚未完全解决，但1937年时前苏联数学家维诺格拉多夫已经证明充分大的奇质数都能写成三个质数的和，也称为“哥德巴赫-维诺格拉朵夫定理”或“三素数定理”。

1.判断是否为偶数，偶数中如果是2输出1，否则输出2。不为偶数则继续
2.判断这个数字n是不是质数，是质数输出1，否则继续
3.判断n-2是不是质数，是质数输出2，否则输出3

*/


int isz(int n)
{
	for(int i = 2 ;i*i <= n ;i++)
	{
		if(!(n%i))
		{
			return 0;
		}
	}
	return 1;
}
int main() 
{
//	freopen("1.in","r",stdin);
	int n;
	while(~scanf("%d",&n))
	{
		if(n == 2||isz(n))
		{
			printf("1\n");
			continue;		
		}
		if(!(n%2))
		{
			printf("2\n");
			continue;		
		}
		if(isz(n-2))
		{
			printf("2\n");
			continue;		
		}
		else
		{
			printf("3\n");
				}		
				
	}
	return 0;
}
